var botOwner = false;
var administrator = false;
var moderator = false;
var adminPermissions = ["ADMINISTRATOR"];
var modPermissions = ["BAN_MEMBERS", "KICK_MEMBERS", "MANAGE_GUILD", "MANAGE_CHANNELS", "MANAGE_ROLES", "MANAGE_MESSAGES"];
module.exports = (client, message) => {
    //Response Time
    client.responseTime = () => {
        return `${Date.now() - message.createdTimestamp} ms`;
    };
    //Get Emoji
    client.getEmoji = (name) => {
        for (var i in config.emojis) {
            if (name === config.emojis[i].name) {
                return client.emojis.find(emoji => emoji.id === config.emojis[i].id);
            }
        }
    };
    //Random Color
    client.randomColor = () => {
        return parseInt(colors[Math.floor(Math.random() * colors.length)]);
    };
    //Create Embed
    client.createEmbed = () => {
        var embed = new Discord.RichEmbed();
        embed
            .setColor(client.randomColor())
            .setTimestamp(embed.timestamp)
            .setFooter(`Responded in ${client.responseTime()}`, message.author.avatarURL);
        return embed;
    };
    //Check for Bot Owner
    client.checkBotOwner = () => {
        if (message.author.id === ownerID) {
            return true;
        }
        else {
            return false;
        }
    };
    //Create Permission
    client.createPermission = (permission) => {
        var perm = new Discord.Permissions(permission);
        return perm;
    };
    //Check for Bot Mention
    client.checkBotMention = (message) => {
        if (message.content.includes("<@!593838271650332672>")) {
            const prefixHelpEmbed = client.createEmbed();
            prefixHelpEmbed
                .setDescription("My prefix is set to " + prefix + "\n" + `For help, please type ${prefix}help!`);
            return true;
        }
    };
    //Check for Prefix and User
    client.checkPrefixUser = (message) => {
        if (!message.content.startsWith(prefix) || message.author.bot) {
            return true;
        }
    };
    //Combine args after an index
    client.combineArgs = (args, num) => {
        var combined = "";
        for (var i = num; i < args.length; i++) {
            combined += args[i] + " ";
        }
        return combined;
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1mdW5jdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9tb2R1bGVzL21lc3NhZ2UtZnVuY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksUUFBUSxHQUFHLEtBQUssQ0FBQztBQUNyQixJQUFJLGFBQWEsR0FBRyxLQUFLLENBQUM7QUFDMUIsSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBRXRCLElBQUksZ0JBQWdCLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUN6QyxJQUFJLGNBQWMsR0FBRyxDQUFDLGFBQWEsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixFQUFFLGNBQWMsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBRTNILE1BQU0sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEVBQUU7SUFFakMsZUFBZTtJQUNmLE1BQU0sQ0FBQyxZQUFZLEdBQUcsR0FBRyxFQUFFO1FBQ3ZCLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixLQUFLLENBQUM7SUFDekQsQ0FBQyxDQUFBO0lBRUQsV0FBVztJQUNYLE1BQU0sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUN2QixLQUFLLElBQUksQ0FBQyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDekIsSUFBSSxJQUFJLEtBQUssTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUU7Z0JBQ2hDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDeEU7U0FDSjtJQUNMLENBQUMsQ0FBQTtJQUdELGNBQWM7SUFDZCxNQUFNLENBQUMsV0FB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